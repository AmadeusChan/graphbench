Use the build-in approximateNodeBetweennessCentrality.

-------------------------------------------------------------
When you type: 'help approximateNodeBetweennessCentrality' in the console of pgx, you will see:

usage: approximateNodeBetweennessCentrality <String graphName> <int k> <String bcName> 

approximate node betweenness centrality (without considering edge length). The algorithm performs a BFS only from randomly selected k seed nodes instead of every node. time complexity: O(K * E) with E = number of edges, K is a given constant (# of seed nodes)
Arguments:
graphName - graph name
k - how many random selected seed nodes to use
bcName - (output) name of double node property to store result
Equivalent Java API: PgxFuture<Void> Ranking#approximateNodeBetweennessCentrality(String sessionId, String graphName, int k, String bcName)
-------------------------------------------------------------

Try the following example.

The input file (input.txt)is the facebook_combined.txt file from :
http://snap.stanford.edu/data/egonets-Facebook.html

It has the format:
node1 node2
node1 node3
node2 node4
...
[separated by white space]


The test.edge.json file is :
{
    "type": "EDGE_LIST",
    "uri": "facebook_combined.txt",
    "separator": " "
}


1. loadGraph test.edge.json test
-- the .json file config the graph and 'test' is the name of the graph

2. createNodeProperty test DOUBLE bc
-- create node property to store the result

3. approximateNodeBetweennessCentrality test 100 bc
-- calculate the BC for 100 random selected seeds and save to bc

4. nodePropValue test bc 2
-- see the output for node 2

5. (optional) printTopK test bc 20
-- you can see the top 20 nodes with this command


Notice: for the input file that is Tab-separated, there are two options:
1. change the separator in json file
2. use the convert.java to convert into white-space separated


